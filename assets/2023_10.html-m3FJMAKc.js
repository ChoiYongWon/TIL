import{_ as i,e as a,g as n,o as e}from"./app-dbWqT-s3.js";const t={};function l(h,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="_2023-10" tabindex="-1"><a class="header-anchor" href="#_2023-10"><span>2023. 10.</span></a></h1><h2 id="_10-15" tabindex="-1"><a class="header-anchor" href="#_10-15"><span>10. 15.</span></a></h2><h3 id="critical-rendering-path-그림으로-이해하기" tabindex="-1"><a class="header-anchor" href="#critical-rendering-path-그림으로-이해하기"><span>Critical Rendering Path 그림으로 이해하기</span></a></h3><blockquote><p>본 글은 실습 시나리오와 그림을 통해 실제 CRP가 어떻게 진행되고, 단계별 상태를 풀어서 이해하기 쉽도록 작성한 글이다. 잘못된 내용이 있을시 yongwon4130@gmail.com으로 문의해주길 바란다.</p></blockquote><p><strong>개요</strong></p><hr><p>브라우저는 <code>Browser Engine</code>, <code>Network Engine</code>, <code>Rendering Engine</code>, <code>Javascript Engine</code> 등 다양한 엔진으로 구성되어있다. 그 중 성능에 가장 많은 영향을 미치는 <code>Rendering Engine</code>에서 발생하는 일을 알아보고자 한다. <code>Rendering Engine</code>은 <code>Network Engine</code>으로부터 받아온 HTML 문서를 최종적으로 화면에 렌더링해주는 역할을 하는데 이 일련의 과정을 <code>Critical Rendering Path</code> (이하 CRP) 라고 한다. CRP의 과정은 <strong>그림 1</strong>과 같다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/a6uMzc4.png" alt=""><span class="caption">그림 1. Critical Rendering Path 과정.</span></div><p><strong>실습 환경 및 시나리오</strong></p><hr><p>브라우저에서 다음과 같은 HTML문서를 파싱한다고 가정한다.<br> 유저는 웹사이트에 접속하여 <code>index.html</code>을 요청하고 이후 브라우저의 <code>Rendering Engine</code>이 처리하는 과정을 살펴본다.</p><div class="language-html line-numbers-mode" data-highlighter="shiki" data-ext="html" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- index.html --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> lang</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;en&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;stylesheet&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./style.css&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> charset</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;UTF-8&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">meta</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> name</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;viewport&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> content</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;width=device-width, initial-scale=1.0&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;Document&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">title</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">head</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;CRP 이해하기&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;2023. 10. 13. 금요일&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./index.js&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;본문입니다.&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./image.jpg&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> alt</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;부가 설명입니다.&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">footer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">      &lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;Copyright 2023. ChoiYongWon inc. all rights reserved. &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">footer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  &lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">html</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-highlighter="shiki" data-ext="css" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">/* style.css */</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">body</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  font-size: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">16</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">header</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  font-weight: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">bold</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  font-size: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">24</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">main</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  color: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">gray</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  font-size: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">20</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">px</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">footer</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">  display: </span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">none</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-js" data-highlighter="shiki" data-ext="js" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#7F848E;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// index.js</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">const</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> document</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#61AFEF;--shiki-dark:#61AFEF;">getElementsByTagName</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;span&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">for</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#C678DD;--shiki-dark:#C678DD;">let</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;"> i</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> 0</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> &lt;</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;"> el</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">length</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">; </span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;">++</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">  el</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">i</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">].</span><span style="--shiki-light:#E5C07B;--shiki-dark:#E5C07B;">style</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">color</span><span style="--shiki-light:#56B6C2;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;"> &quot;red&quot;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p><strong>HTML 파싱 DOM, CSSOM Tree 생성</strong></p><hr><p>HTML 파싱은 HTML 문서를 위에서 아래로 절차적으로 파싱하여<code> DOM Tree</code>와 <code>CSSOM Tree</code>를 만드는 과정이다. 전체 파싱 과정과 파싱 중에 <code>index.html</code> 코드에서 하이라이팅된 3개의 리소스 (<code>css</code>, <code>script</code>, <code>img</code>)를 처리하는 방식을 살펴보자.</p><p><strong>stylesheet 리소스</strong></p><blockquote><p><strong>Line 3</strong></p><div class="language-html" data-highlighter="shiki" data-ext="html" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">link</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> rel</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;stylesheet&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> href</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./style.css&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre></div></blockquote><ul><li><strong>Line 3</strong>: <code>link</code> 태그를 만나면서 <code>style.css</code>를 서버에 요청하고, 응답을 받으면 병렬적으로 <code>CSSOM Tree</code>을 생성한다. 이 때 HTML 파싱은 멈추지 않고 계속 진행한다. 생성된 <code>CSSOM Tree</code>은 <strong>그림 2</strong>와 같다.</li></ul><div class="img-container"><img class="img" src="https://i.imgur.com/Bp4w6Zi.png" alt=""><span class="caption">그림 2. Line 3에서 생성된 CSSOM Tree.</span></div><p><strong>script 리소스</strong></p><blockquote><p><strong>Line 14</strong></p><div class="language-html" data-highlighter="shiki" data-ext="html" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./index.js&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;&lt;/</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">script</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre></div></blockquote><ul><li><strong>Line 14</strong>: <code>script</code> 태그를 만나면 HTML 파싱이 즉시 멈추고 <code>index.js</code>를 서버에 요청하고 <code>JS Engine</code>에게 실행을 위임한다. 그 후 다시 <code>Rendering Engine</code>이 권한을 위임 받아 HTML파싱을 계속한다.</li></ul><p><code>script</code>는 <code>DOM Tree</code>와 <code>CSSOM Tree</code>을 수정할 가능성이 있으므로 HTML 파싱 과정을 멈추고 실행된다. 이 때 <strong>Line 3</strong>에서 요청한 <code>style.css</code>의 <code>CSSOM Tree</code>가 생성되지 않았다면, 생성될 때 까지 기다리고 <code>script</code>를 실행한다. <code>index.js</code> 의 코드는 <code>document 객체 내의 모든 span 태그의 글자 색상을 red로 변경</code> 의 내용을 포함한다. <code>index.html</code>을 살펴보면 문서 내에 총 2개의 <code>span</code> 태그가 있음을 알 수 있는데 (Line 12, 18), <code>index.js</code>가 실행되는 시점에서의 <code>DOM Tree</code>는 <strong>그림 3</strong>과 같으므로 <strong>Line 12</strong>의 <code>span</code> 태그에만 스타일이 적용된다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/OROqubt.png" alt=""><span class="caption">그림 3. Line 14 시점의 Dom Tree.</span></div><p><code>index.js</code>가 실행된 후 <code>CSSOM Tree</code>의 상태는 <strong>그림 4</strong>와 같다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/TSOgXPx.png" alt=""><span class="caption">그림 4. index.js 실행 후 CSSOM Tree의 상태.</span></div><p><strong>image 리소스</strong></p><blockquote><p><strong>Line 17</strong></p><div class="language-html" data-highlighter="shiki" data-ext="html" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E06C75;--shiki-dark:#E06C75;">img</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> src</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;./image.jpg&quot;</span><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;"> alt</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#98C379;--shiki-dark:#98C379;">&quot;&quot;</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre></div></blockquote><ul><li><strong>Line 17</strong>: <code>img</code> 태그를 만난다. <code>image.jpg</code>를 서버에 요청한다. 이 때 파싱은 stylesheet 리소스를 요청할 때와 같이 멈추지 않고 계속 진행한다.</li></ul><p><strong>Line 24</strong>까지 모든 파싱을 마치고 최종 생성된 <code>DOM Tree</code>는 <strong>그림 5</strong>와 같다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/buvoo82.png" alt=""><span class="caption">그림 5. 최종 DOM Tree 모습.</span></div><p>앞서 설명한 HTML 파싱 과정을 waterfall 방식으로 나타내면 <strong>그림 6</strong>과 같다. <code>css</code>와 <code>image</code>는 병렬적으로 요청되지만 <code>script</code> 태그를 만났을때는 파싱이 잠시 중단된다. 이는 위에서 언급했듯이 <code>css</code>와 <code>image</code>는 <code>DOM Tree</code>를 생성하는데 아무런 영향을 미치지 않지만 <code>script</code>는 파싱 도중에 <code>DOM Tree</code>를 직접적으로 수정할 수 있기 때문이다. 또한 <code>script</code>는 파싱 중에 <code>CSSOM Tree</code>도 수정할 수 있으므로 <code>script</code>를 실행하기 전에 <code>CSSOM Tree</code>이 아직 생성되지 않았다면 완료될때까지 기다린다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/WnfFySr.png" alt=""><span class="caption">그림 6. HTML 파싱 Waterfall.</span></div><p>HTML 파싱이 완료되고 <code>Dom Tree</code>가 생성된 시점에서 document 객체에서 <code>DomContentLoaded</code> 이벤트가 발생한다. 이 이벤트는 <strong>그림 7</strong>에서 파란색 실선이다. <code>index.js</code> 스크립트가 모두 실행되고 호출되는 시점으로, 이는 <strong>Line 14</strong>의 스크립트를 동기적으로 실행하고 <strong>Line 24</strong>(끝)까지 파싱을 완료하고 <code>Dom Tree</code>를 생성한 시점이다. 빨간색 실선은 나머지 과정(<code>HTML 파싱</code> ~ <code>paint</code>)이 모두 완료된 후 호출되는 <code>Load</code> 이벤트를 나타낸다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/tlqPuvn.png" alt=""><span class="caption">그림 7. Chrome Network 탭에서의 HTML 파싱 과정.</span></div><p><strong>Render Tree</strong></p><hr><p><code>Render Tree</code>는 앞서 생성된 <code>DOM Tree</code>에 <code>CSSOM Tree</code>를 적용시켜 생성된 새로운 <code>Tree</code>이다. <code>Render Tree</code>는 실제 화면에 표시될 노드들로만 구성되어있다. 그래서 <code>head</code> 태그는 포함되지 않으며 <code>body</code> 태그 내의 내용들로 구성되어있다. 실제 <strong>그림 4</strong>와 <strong>그림 5</strong>를 합쳐서 구성된 <code>Render Tree</code>는 <strong>그림 8</strong>과 같다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/pCMknS9.png" alt=""><span class="caption">그림 8. DOM Tree와 CSSOM이 합쳐진 Render Tree.</span></div><p><code>Render Tree</code>는 화면에 표시되는 모든 요소를 포함하며, 요소에 적용되는 스타일 정보를 나타낸다. 이 <code>Render Tree</code>를 구성하는 과정에서 각 요소의 스타일은 하향식으로 종속적으로 적용된다. 이 때, 자식 스타일과 부모 스타일이 겹치게되면 더 깊게 적용된 스타일에 우선순위를 두며 상속받은 스타일은 무시해버린다 (<strong>그림 8</strong> 참조). <code>Render Tree</code>는 DOM 요소의 스타일 정보와 레이아웃 정보를 담고 있지만, 이 정보는 요소가 화면에 어떤 위치에 렌더링되어야 하는지 직접적으로 나타내지는 않는다. 요소의 실제 위치는 레이아웃(Layout) 단계에서 결정된다.</p><p><strong>Layout(Reflow)</strong></p><hr><p><code>Layout</code> 단계에서는 <strong>viewport를 기준으로 요소의 크기, 위치, 여백, 패딩 등이 계산</strong>되어 요소가 실제 화면에 배치될 위치(좌표)가 정해진다. 그래서 <code>Layout</code>을 일으키는 기준인 브라우저의 창 크기나 CSS Box Model을 수정하면 화면에 그려지는 좌표값이 달라지기 때문에 Layout 과정을 다시 계산하게 된다. <strong>그림 9</strong>는 실제 Box Model과 이미지의 width를 각각 20%, 30%로 설정한 다음 브라우저 창 크기를 반복적으로 리사이즈하여 실제로 <code>Layout</code> 과정이 이루어지는지 측정해보았다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/qMYsQLS.gif" alt=""><span class="caption">그림 9. Layout 성능 측정.</span></div><p><strong>그림 10</strong>의 이벤트 로그를 확인해보면 Viewport 크기가 변경될 때마다 Layout 과정이 다시 이루어지면서 요소의 좌표값을 계산해주는 모습을 확인할 수 있다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/RVXqTRb.gif" alt=""><span class="caption">그림 10. Layout 성능 측정 결과.</span></div><p>이렇게 화면에 보이는 요소 각각이 어디에 어떻게 위치할 지를 정해주는 과정을 Webkit에서는 layout으로, Gecko에서는 reflow로 부르고 있다.</p><p><strong>Paint</strong></p><hr><p><code>Paint</code> 단계는 <code>Layout</code> 단계에서 변환된 실제 좌표 값을 화면에 그려주는 역할을 한다. <code>Layout</code> 단계에서는 요소의 크기와 위치에 기준을 두었다면 <code>Paint</code>를 일으키는 기준은 요소의 색상이나 배경이 된다. <strong>그림 11</strong>은 Box의 테두리 색상을 100ms 간격으로 변경하게 두고 실제로 <code>Paint</code> 과정이 이루어지는지 측정해보았다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/DxJ2IYT.gif" alt=""><span class="caption">그림 11. Paint 성능 측정.</span></div><p><strong>그림 12</strong>의이벤트 로그를 확인해보면 테두리 색상만 변경되었으므로 Layout 과정없이 Paint 단계부터 다시 실행되는걸 확인할 수 있다.</p><div class="img-container"><img class="img" src="https://i.imgur.com/v9AdUtf.gif" alt=""><span class="caption">그림 12. Paint 성능 측정 결과.</span></div><p><strong>Reference</strong></p><hr><ul><li><a href="https://www.youtube.com/watch?v=SmE4OwHztCc" target="_blank" rel="noopener noreferrer">Ryan Seddon: So how does the browser actually render a website | JSConf EU 2015</a></li><li><a href="https://www.youtube.com/watch?v=0IsQqJ7pwhw" target="_blank" rel="noopener noreferrer">Kruno: How browsers work | JSUnconf 2017</a></li><li><a href="https://www.youtube.com/watch?v=RVnARGhhs9w" target="_blank" rel="noopener noreferrer">How to render in WebKit</a></li><li><a href="https://m.post.naver.com/viewer/postView.nhn?volumeNo=8431285&amp;memberNo=34176766" target="_blank" rel="noopener noreferrer">브라우저는 웹페이지를 어떻게 그리나요? - Critical Rendering Path</a></li><li><a href="https://web.dev/articles/critical-rendering-path?hl=ko" target="_blank" rel="noopener noreferrer">Critical Rendering Path</a></li></ul>`,58)]))}const k=i(t,[["render",l],["__file","2023_10.html.vue"]]),B=JSON.parse('{"path":"/archives/2023_10.html","title":"2023. 10.","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"10. 15.","slug":"_10-15","link":"#_10-15","children":[{"level":3,"title":"Critical Rendering Path 그림으로 이해하기","slug":"critical-rendering-path-그림으로-이해하기","link":"#critical-rendering-path-그림으로-이해하기","children":[]}]}],"git":{"updatedTime":1741537872000,"contributors":[{"name":"ChoiYongWon","username":"ChoiYongWon","email":"yongwon0824@naver.com","commits":2,"url":"https://github.com/ChoiYongWon"}],"changelog":[{"hash":"f6b57824696f693a7872ac6a4b760fdcb840cf71","date":1741537872000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"feat: 기존 글 archive로 이동 및 mermaid 추가"},{"hash":"6cd255aa7eaea0ce0077fba9317a5fa7ffc6ebf4","date":1714096356000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"10. 15."}]},"filePathRelative":"archives/2023_10.md"}');export{k as comp,B as data};
