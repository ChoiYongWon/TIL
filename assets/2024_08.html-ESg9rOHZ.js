import{_ as l,e as i,g as a,h as e,o as s}from"./app-dbWqT-s3.js";const o={};function t(h,n){return s(),i("div",null,n[0]||(n[0]=[a('<h1 id="_2024-08" tabindex="-1"><a class="header-anchor" href="#_2024-08"><span>2024. 08.</span></a></h1><h2 id="_08-27" tabindex="-1"><a class="header-anchor" href="#_08-27"><span>08. 27.</span></a></h2><h3 id="실무에서-바로-쓰는-frontend-clean-code" tabindex="-1"><a class="header-anchor" href="#실무에서-바로-쓰는-frontend-clean-code"><span>실무에서 바로 쓰는 Frontend Clean Code</span></a></h3>',3),e("div",{class:"img-container"},[e("iframe",{src:"https://www.youtube.com/embed/edWbHp_k_9Y",class:"iframe",frameborder:"0",allowfullscreen:"true"})],-1),a('<p>좋은 코드 != 짧은 코드<br> 로직을 찾기 좋은 코드이며 읽기만해도 이해가 가야하며 유지보수하기 좋아야한다.</p><ul><li>코드 응집도 <ul><li>같은 역할을 하는 코드는 최대한 묶어두자</li><li>최대한 묶 되, 더러운 코드는 한 곳에 라는 느낌 보다는 노출할 부분은 노출하자</li></ul></li><li>단일책임 <ul><li>하나의 함수는 하나의 역할</li></ul></li><li>추상화 <ul><li>상황에 따라서 추상화 정도를 정하자</li><li>하나의 파일 내에 추상화 레벨을 맞춰야 흐름 파악이 쉽다</li></ul></li></ul><p><strong>TIP</strong><br> JSX 문법으로 로직을 선언적으로 구현할 수 있다. <a href="https://www.youtube.com/watch?v=edWbHp_k_9Y&amp;t=797s" target="_blank" rel="noopener noreferrer">13:17</a></p><h2 id="_08-29" tabindex="-1"><a class="header-anchor" href="#_08-29"><span>08. 29.</span></a></h2><h3 id="effective-component-지속-가능한-성장과-컴포넌트" tabindex="-1"><a class="header-anchor" href="#effective-component-지속-가능한-성장과-컴포넌트"><span>Effective Component 지속 가능한 성장과 컴포넌트</span></a></h3>',5),e("div",{class:"img-container"},[e("iframe",{src:"https://www.youtube.com/embed/fR8tsJ2r7Eg",class:"iframe",frameborder:"0",allowfullscreen:"true"})],-1),a(`<p>변경에 유연하게 대응하는 컴포넌트는 다음과 같이</p><ul><li>Headless 기반으로 추상화가 잘 일어나야함</li><li>한가지 역할만 하기</li><li>도메인을 포함하는 컴포넌트와 아닌 컴포넌트 분리</li></ul><h2 id="_08-30" tabindex="-1"><a class="header-anchor" href="#_08-30"><span>08. 30.</span></a></h2><h3 id="css-will-change는-브라우저-내부적으로-어떤-과정이-진행되는가" tabindex="-1"><a class="header-anchor" href="#css-will-change는-브라우저-내부적으로-어떤-과정이-진행되는가"><span>CSS will-change는 브라우저 내부적으로 어떤 과정이 진행되는가?</span></a></h3><div class="language-css" data-highlighter="shiki" data-ext="css" style="--shiki-light:#abb2bf;--shiki-dark:#abb2bf;--shiki-light-bg:#282c34;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-dark-pro one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#D19A66;--shiki-dark:#D19A66;">.component</span><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">    will-change: transform;</span></span>
<span class="line"><span style="--shiki-light:#ABB2BF;--shiki-dark:#ABB2BF;">}</span></span></code></pre></div><p>라 가정할 때</p><ul><li>transform을 실제로 사용하기 전에 해당 요소를 별도의 레이어로 승격시킨다. 레이어가 생성될 때의 지연시간을 줄일 수 있다.</li><li>변형이 예상되는 요소에 대해 GPU 메모리를 미리 할당한다.</li><li>브라우저는 해당 요소에 대한 애니메이션을 예상하고, 프레임 계산 등을 최적화할 수 있다.</li></ul><h2 id="_08-31" tabindex="-1"><a class="header-anchor" href="#_08-31"><span>08. 31.</span></a></h2><h3 id="react-재조정-과정에서-컴포넌트를-업데이트-대상으로-정하는-기준" tabindex="-1"><a class="header-anchor" href="#react-재조정-과정에서-컴포넌트를-업데이트-대상으로-정하는-기준"><span>react 재조정 과정에서 컴포넌트를 업데이트 대상으로 정하는 기준</span></a></h3><ol><li>props의 변경 (얕은 비교를 통해 감지)</li><li>내부 state 변경</li><li>부모 컴포넌트의 리렌더링 <ul><li>부모 컴포넌트가 리렌더링 되면 모든 자식 컴포넌트가 리렌더링 대상이 된다</li></ul></li><li>key 변경</li><li>hooks 의존성 변경</li></ol><p>등이 있다.</p>`,11)]))}const c=l(o,[["render",t],["__file","2024_08.html.vue"]]),d=JSON.parse('{"path":"/archives/2024_08.html","title":"2024. 08.","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"08. 27.","slug":"_08-27","link":"#_08-27","children":[{"level":3,"title":"실무에서 바로 쓰는 Frontend Clean Code","slug":"실무에서-바로-쓰는-frontend-clean-code","link":"#실무에서-바로-쓰는-frontend-clean-code","children":[]}]},{"level":2,"title":"08. 29.","slug":"_08-29","link":"#_08-29","children":[{"level":3,"title":"Effective Component 지속 가능한 성장과 컴포넌트","slug":"effective-component-지속-가능한-성장과-컴포넌트","link":"#effective-component-지속-가능한-성장과-컴포넌트","children":[]}]},{"level":2,"title":"08. 30.","slug":"_08-30","link":"#_08-30","children":[{"level":3,"title":"CSS will-change는 브라우저 내부적으로 어떤 과정이 진행되는가?","slug":"css-will-change는-브라우저-내부적으로-어떤-과정이-진행되는가","link":"#css-will-change는-브라우저-내부적으로-어떤-과정이-진행되는가","children":[]}]},{"level":2,"title":"08. 31.","slug":"_08-31","link":"#_08-31","children":[{"level":3,"title":"react 재조정 과정에서 컴포넌트를 업데이트 대상으로 정하는 기준","slug":"react-재조정-과정에서-컴포넌트를-업데이트-대상으로-정하는-기준","link":"#react-재조정-과정에서-컴포넌트를-업데이트-대상으로-정하는-기준","children":[]}]}],"git":{"updatedTime":1741537872000,"contributors":[{"name":"ChoiYongWon","username":"ChoiYongWon","email":"yongwon0824@naver.com","commits":8,"url":"https://github.com/ChoiYongWon"}],"changelog":[{"hash":"f6b57824696f693a7872ac6a4b760fdcb840cf71","date":1741537872000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"feat: 기존 글 archive로 이동 및 mermaid 추가"},{"hash":"ce001acc945415bdfac06733dbd1169d58af9aae","date":1725093341000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 31."},{"hash":"fa4d727f9eb0e8cb23d0e159b18fd67a07c2b8ce","date":1725027877000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 30. will-change"},{"hash":"01f39082f81023485b8197cbf397e00e555a2d53","date":1724927580000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 29."},{"hash":"b740d5346e33c786d95b6d2887bb5a8c612da960","date":1724837800000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 27. 들여쓰기 2"},{"hash":"13f1b5edf893a19d052076599dce7bfb98d10b51","date":1724836317000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 27. 들여쓰기"},{"hash":"b9ea50d821d1845236a1b2cd74a48a723f61c5d8","date":1724835552000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 27. Youtube Embed로 변경"},{"hash":"c8e238d36466184bfe498a2bc5b782eb8393a5e8","date":1724724120000,"email":"yongwon0824@naver.com","author":"ChoiYongWon","message":"08. 27"}]},"filePathRelative":"archives/2024_08.md"}');export{c as comp,d as data};
